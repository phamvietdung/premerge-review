{
  "name": "premerge-review",
  "displayName": "PreMerge Review",
  "description": "AI-assisted code review before merging with visual diff viewer, GitHub Copilot integration, and Slack notifications",
  "version": "1.0.0",
  "publisher": "phamvietdung",
  "icon": "media/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/phamvietdung/premerge-review.git"
  },
  "bugs": {
    "url": "https://github.com/phamvietdung/premerge-review/issues"
  },
  "homepage": "https://github.com/phamvietdung/premerge-review#readme",
  "keywords": [
    "code review",
    "git",
    "diff",
    "ai",
    "copilot",
    "github",
    "slack",
    "merge",
    "premerge",
    "quality"
  ],
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Linters",
    "SCM Providers"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "premergeReviewSidebar",
          "title": "PreMerge Review",
          "icon": "./media/icon.png"
        }
      ]
    },
    "commands": [
      {
        "command": "premerge-review.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "premerge-review.refreshGit",
        "title": "Refresh Git Branches"
      },
      {
        "command": "premerge-review.showReviewData",
        "title": "Show Current Review Data"
      },
      {
        "command": "premerge-review.testSlackConnection",
        "title": "Test Slack Connection"
      },
      {
        "command": "premerge-review.showDiffViewer",
        "title": "Show Diff Viewer",
        "category": "PreMerge Review",
        "icon": "$(diff)"
      },
      {
        "command": "premerge-review.exportDiff",
        "title": "Export Diff",
        "category": "PreMerge Review",
        "icon": "$(export)"
      },
      {
        "command": "premerge-review.showReviewHistory",
        "title": "Show Review History",
        "category": "PreMerge Review",
        "icon": "$(history)"
      },
      {
        "command": "premerge-review.clearReviewResults",
        "title": "Clear All Review Results",
        "category": "PreMerge Review",
        "icon": "$(trash)"
      }
    ],
    "views": {
      "premergeReviewSidebar": [
        {
          "id": "premergeReviewView",
          "name": "PreMerge Review",
          "type": "webview",
          "icon": "./media/icon.png"
        }
      ]
    },
    "configuration": {
      "title": "PreMerge Review",
      "properties": {
        "premergeReview.instructionFiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".github/instructions.md",
            ".github/review-instructions.md",
            "docs/review-guidelines.md"
          ],
          "description": "List of instruction file paths to read for review guidance. Paths are relative to workspace root. Extension will automatically load any existing files.",
          "scope": "resource"
        },
        "premergeReview.maxInstructionFileSize": {
          "type": "number",
          "default": 1048576,
          "description": "Maximum size in bytes for instruction files (default: 1MB)",
          "scope": "resource"
        },
        "premergeReview.slack.webhookUrl": {
          "type": "string",
          "default": "",
          "description": "Slack Incoming Webhook URL (e.g., https://hooks.slack.com/services/YOUR/WEBHOOK/URL). Leave empty to disable Slack integration.",
          "scope": "resource"
        },
        "premergeReview.maxTokensPerPart": {
          "type": "number",
          "default": 8000,
          "minimum": 1000,
          "maximum": 32000,
          "description": "Maximum number of tokens per part when splitting large diffs for review. Smaller values use less tokens but require more API calls.",
          "scope": "resource"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && npm run build-webview",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "build-webview": "node build-webview.js",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@preact/preset-vite": "^2.10.2",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/react": "^19.1.8",
    "@types/vscode": "^1.102.0",
    "@types/vscode-webview": "^1.57.5",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.6",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "preact": "^10.26.9",
    "simple-git": "^3.28.0"
  }
}
